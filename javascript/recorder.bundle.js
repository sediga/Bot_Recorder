(()=>{function m(i){let c={};for(let n of i.attributes)n.name&&n.value&&(c[n.name]=n.value);return c}(function(){if(console.debug("[Botflows] Recorder script starting execution..."),window.__recorderInjected){console.debug(`[Botflows] Recorder already injected at ${window.__recorderInjectedTime}, skipping.`);return}window.__recorderInjected=!0,window.__recorderInjectedTime=new Date().toISOString(),console.debug("[Botflows] Recorder script injected successfully");let i={selector:null,timestamp:0},c={selector:null,timestamp:0},n=window.getSmartSelectorLib.getSmartSelector,w=()=>window.__pickModeActive===!0,p=(t,r={})=>{if(w()){console.debug("[Botflows] In pick mode \u2014 event suppressed:",t.type);return}let l=t.target,e=l.closest('a, button, input[type="button"], [role="button"]')||l,o=t.type;if(!e||e===document||e===document.body||!document.contains(e)||typeof window.sendEventToPython!="function"){console.debug("[Botflows] Ignoring untrackable target:",e);return}let s=n(e),u=Date.now();if(o==="click"&&s===i.selector&&u-i.timestamp<80){console.debug("[Botflows] Suppressed duplicate click:",s);return}if(o==="focus"){let d=e.tagName.toLowerCase();if(!["input","textarea","select"].includes(d)){console.debug("[Botflows] Ignored focus event on non-input element:",d);return}}o==="click"&&(i={selector:s,timestamp:u}),o==="focus"&&(c={selector:s,timestamp:u});let f={action:o==="input"?"type":o,selector:s,timestamp:u,value:e.value||null,url:window.location.href,tagName:e.tagName||null,classList:Array.from(e.classList||[]),attributes:m(e),innerText:e.innerText||null,elementText:e.textContent||null,...r};if(console.debug("[Botflows] Event recorded:",f),window.sendEventToPython(f),window.parent.postMessage({type:"recorded-event",data:f},"*"),o==="click"&&typeof window.sendLogToPython=="function"){let d=e.parentElement?.tagName?.toLowerCase()||null,S=Array.from(e.parentElement?.children||[]).filter(g=>g!==e).map(g=>g.innerText.trim()).filter(Boolean),T={event:"click",selector:s,elementMeta:{tag:e.tagName.toLowerCase(),attributes:m(e),innerText:e.innerText?.trim(),parentTag:d,siblingText:S},timestamp:new Date().toISOString(),pageUrl:window.location.href};console.debug("[Botflows] Sending log to Python:",T),window.sendLogToPython(T)}};["click","focus","change"].forEach(t=>{document.addEventListener(t,p,!0),console.debug(`[Botflows] Event listener attached for ${t}`)}),document.addEventListener("blur",t=>{if(w()){console.debug("[Botflows] Blur event suppressed in pick mode");return}let r=t.target;r.matches("input, textarea, select")&&(console.debug("[Botflows] Blur captured as type event"),p(t,{action:"type",value:r.value}))},!0);let b=window.location.href,a=()=>{let t=window.location.href;t!==b&&typeof window.sendUrlChangeToPython=="function"&&(b=t,console.debug("[Botflows] Detected SPA URL change:",t),window.sendUrlChangeToPython(t))},y=()=>{document.body?(console.debug("[Botflows] Setting up mutation observer for body"),new MutationObserver(a).observe(document.body,{childList:!0,subtree:!0})):setTimeout(y,100)};y();let h=t=>{let r=history[t];history[t]=function(...l){r.apply(this,l),console.debug(`[Botflows] Intercepted history.${t}`),a()}};window.addEventListener("popstate",a),a(),h("pushState"),h("replaceState")})();})();
